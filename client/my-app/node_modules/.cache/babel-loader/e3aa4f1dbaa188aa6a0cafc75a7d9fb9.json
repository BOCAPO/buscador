{"ast":null,"code":"var _jsxFileName = \"/user/src/app/src/components/resultsSlider.js\";\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Slider from '@mui/material/Slider';\nimport MuiInput from '@mui/material/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = styled(MuiInput)`\n  width: 42px;\n`;\n_c = Input;\nexport default function InputSlider(props) {\n  //const [value, setValue] = React.useState();\n  const handleSliderChange = (event, newValue) => {\n    props.setResultCount(newValue);\n  };\n\n  const handleInputChange = event => {\n    props.setResultCount(event.target.value === '' ? '' : Number(event.target.value));\n  };\n\n  const handleBlur = () => {\n    if (props.resultCount < 1) {\n      props.setResultCount(1);\n    } else if (props.resultCount > 10000) {\n      props.setResultCount(10000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: 205\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      id: \"input-slider\",\n      gutterBottom: true,\n      children: \"Resultados\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: true,\n        children: /*#__PURE__*/_jsxDEV(Slider, {\n          value: typeof props.resultCount === 'number' ? props.resultCount : 0,\n          onChange: handleSliderChange,\n          \"aria-labelledby\": \"input-slider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          value: props.resultCount,\n          size: \"small\",\n          onChange: handleInputChange,\n          onBlur: handleBlur,\n          inputProps: {\n            step: 10,\n            min: 0,\n            max: 10000,\n            type: 'number',\n            'aria-labelledby': 'input-slider'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_c2 = InputSlider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Input\");\n$RefreshReg$(_c2, \"InputSlider\");","map":{"version":3,"sources":["/user/src/app/src/components/resultsSlider.js"],"names":["React","styled","Box","Grid","Typography","Slider","MuiInput","Input","InputSlider","props","handleSliderChange","event","newValue","setResultCount","handleInputChange","target","value","Number","handleBlur","resultCount","width","step","min","max","type"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;AAEA,MAAMC,KAAK,GAAGN,MAAM,CAACK,QAAD,CAAW;AAC/B;AACA,CAFA;KAAMC,K;AAIN,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACzC;AAEA,QAAMC,kBAAkB,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC9CH,IAAAA,KAAK,CAACI,cAAN,CAAqBD,QAArB;AACD,GAFD;;AAIA,QAAME,iBAAiB,GAAIH,KAAD,IAAW;AACnCF,IAAAA,KAAK,CAACI,cAAN,CAAqBF,KAAK,CAACI,MAAN,CAAaC,KAAb,KAAuB,EAAvB,GAA4B,EAA5B,GAAiCC,MAAM,CAACN,KAAK,CAACI,MAAN,CAAaC,KAAd,CAA5D;AACD,GAFD;;AAIA,QAAME,UAAU,GAAG,MAAM;AACvB,QAAIT,KAAK,CAACU,WAAN,GAAoB,CAAxB,EAA2B;AACvBV,MAAAA,KAAK,CAACI,cAAN,CAAqB,CAArB;AACH,KAFD,MAEO,IAAIJ,KAAK,CAACU,WAAN,GAAoB,KAAxB,EAA+B;AAClCV,MAAAA,KAAK,CAACI,cAAN,CAAqB,KAArB;AACH;AACF,GAND;;AAQA,sBACE,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEO,MAAAA,KAAK,EAAE;AAAT,KAAT;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,EAAE,EAAC,cAAf;AAA8B,MAAA,YAAY,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAA4B,MAAA,UAAU,EAAC,QAAvC;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,MAAb;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,KAAK,EAAE,OAAOX,KAAK,CAACU,WAAb,KAA6B,QAA7B,GAAwCV,KAAK,CAACU,WAA9C,GAA4D,CADrE;AAEE,UAAA,QAAQ,EAAET,kBAFZ;AAGE,6BAAgB;AAHlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA,+BACE,QAAC,KAAD;AACE,UAAA,KAAK,EAAED,KAAK,CAACU,WADf;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,QAAQ,EAAEL,iBAHZ;AAIE,UAAA,MAAM,EAAEI,UAJV;AAKE,UAAA,UAAU,EAAE;AACVG,YAAAA,IAAI,EAAE,EADI;AAEVC,YAAAA,GAAG,EAAE,CAFK;AAGVC,YAAAA,GAAG,EAAE,KAHK;AAIVC,YAAAA,IAAI,EAAE,QAJI;AAKV,+BAAmB;AALT;AALd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;MAlDuBhB,W","sourcesContent":["import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport Slider from '@mui/material/Slider';\r\nimport MuiInput from '@mui/material/Input';\r\n\r\nconst Input = styled(MuiInput)`\r\n  width: 42px;\r\n`;\r\n\r\nexport default function InputSlider(props) {\r\n  //const [value, setValue] = React.useState();\r\n\r\n  const handleSliderChange = (event, newValue) => {\r\n    props.setResultCount(newValue);\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    props.setResultCount(event.target.value === '' ? '' : Number(event.target.value));\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    if (props.resultCount < 1) {\r\n        props.setResultCount(1);\r\n    } else if (props.resultCount > 10000) {\r\n        props.setResultCount(10000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: 205 }}>\r\n      <Typography id=\"input-slider\" gutterBottom>\r\n        Resultados\r\n      </Typography>\r\n      <Grid container spacing={2} alignItems=\"center\">\r\n        <Grid item xs>\r\n          <Slider\r\n            value={typeof props.resultCount === 'number' ? props.resultCount : 0}\r\n            onChange={handleSliderChange}\r\n            aria-labelledby=\"input-slider\"\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <Input\r\n            value={props.resultCount}\r\n            size=\"small\"\r\n            onChange={handleInputChange}\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              step: 10,\r\n              min: 0,\r\n              max: 10000,\r\n              type: 'number',\r\n              'aria-labelledby': 'input-slider',\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}